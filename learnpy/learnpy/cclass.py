import ctypes
import camo

#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#
# Uses the SVM.unsb project file referenced under 'Tutorials/Quick starters/SVM classification quick start' in The Unscrambler X 10.5 help files.
#
# Update the path to the project file below according to your installation.
#
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Do a simple classification.
			   
def do_classify():
    classifier = ctypes.c_long(0)

    # Open the Unscrambler Engine
	
    try:
        engine = ctypes.CDLL('camoengine.dll')
    except:
        print("Could not load Unscrambler Engine (camoengine.dll)")
        return

    # Get a handle to the classifier
		
    camo_rc = engine.olcOpenClassifier(ctypes.byref(classifier))
    if camo_rc != 0:
        print("Error opening classifier: ", camo.rc_to_string(camo_rc))
        return

    # Set some options in the classifier
		
    topts = camo.TOptions()
    topts.DoPretreatments = 1
    topts.OutlierDetection = 0
    topts.ResultLevel = 2
    topts.ClassifierType = 2	# 2 = SVM (classifier type) (see camoengine.h)
    camo_rc = engine.olcSetOptions(classifier, ctypes.byref(topts))
    if camo_rc != 0:
        print("Error setting options for classifier: ", camo.rc_to_string(camo_rc))
        return

    # Open the Unscrambler X project file containing the classification model we want to use
		
    camo_rc = engine.olcSelectProjectFileUTF8(classifier, ctypes.c_char_p("C:/Program Files/The Unscrambler X 10.5/Data/SVM.unsb".encode('utf-8')), ctypes.c_char_p("SVM".encode('utf-8')), "");
    if camo_rc != 0:
        print("Error selecting project file: ", camo.rc_to_string(camo_rc))
        return

    # Init the classifier to use the model
		
    camo_rc = engine.olcInitFromModelFiles(classifier);
    if camo_rc != 0:
        print("Error doing init from model file: ", camo.rc_to_string(camo_rc))
        return

    # Show some information about the model
		
    tmodelinfo = camo.TModelInfo()
    camo_rc = engine.olcGetModelInfo(classifier, 0, ctypes.byref(tmodelinfo))
    if camo_rc != 0:
        print("Error getting model info: ", camo.rc_to_string(camo_rc))
        return

    print("Calibration method = ", camo.calibration_methods[tmodelinfo.CalMethod - 1])
    print("Components used = ", tmodelinfo.CompsUsed)
    print("Components opt = ", tmodelinfo.CompsOpt)
    print("Components num = ", tmodelinfo.NumComps)
    print("X vars = ", tmodelinfo.NumXVars)
    print("Y vars = ", tmodelinfo.NumYVars)
    print("Model size = ", camo.model_size[tmodelinfo.ModelSize])
		
	# this is the 'DiCaP-1' sample #19 from the FiveRawMaterials data set found in 'Help Files / Tutorials / Quick Startes / SVM classification quick start'
    # class should be 1
    #sample = [0.0651144981, 0.064891018, 0.0645290241, 0.0640815496, 0.0634722337, 0.0627110004, 0.061867673, 0.0610278435, 0.0602484159, 0.0594917946, 0.0586424284, 0.0577196665, 0.0568168163, 0.0560098886, 0.0552852154, 0.0545348711, 0.053732913, 0.0529514141, 0.0522038154, 0.05146138, 0.0507394858, 0.0500582457, 0.0494432449, 0.0488330126, 0.0482202768, 0.047589343, 0.0468995981, 0.0461781435, 0.0454791375, 0.0447952747, 0.0441140346, 0.043435771, 0.0427664518, 0.0421118326, 0.0415011644, 0.0409388132, 0.0403820686, 0.0398162194, 0.039265871, 0.0387239866, 0.0381909199, 0.0376922674, 0.0372113772, 0.0367639847, 0.0363438539, 0.0359479189, 0.0355573893, 0.0351636, 0.0347648859, 0.0343822241, 0.0340183564, 0.0336495638, 0.0332833119, 0.0329412222, 0.0326230936, 0.0323298387, 0.0320403166, 0.0317537002, 0.0314740725, 0.0312080588, 0.0309578571, 0.030726552, 0.0305127297, 0.0303120818, 0.0301400814, 0.0299864206, 0.0298583116, 0.0297652092, 0.0296992064, 0.0296735168, 0.0296927691, 0.0297637377, 0.0298439059, 0.0299054775, 0.0299089551, 0.0298586097, 0.0297591686, 0.0296641197, 0.0295914616, 0.0295313988, 0.0294783115, 0.0294275489, 0.02936236, 0.0292973723, 0.0292543974, 0.0292241368, 0.0292061772, 0.0292041302, 0.0292091761, 0.0292377472, 0.0292798486, 0.0293362737, 0.0293922424, 0.0294481516, 0.0295130406, 0.0295917597, 0.029677311, 0.0297639575, 0.0298395958, 0.0299292207, 0.030044198, 0.0301825795, 0.0303678513, 0.0306154098, 0.0309433732, 0.0313505717, 0.0318126678, 0.0323263407, 0.0328788161, 0.0334665962, 0.0341011882, 0.0347941108, 0.0355813093, 0.0365224481, 0.0377234817, 0.0392215066, 0.040876288, 0.042347569, 0.0432221107, 0.0433146767, 0.042785842, 0.042042315, 0.0414403267, 0.0411198922, 0.0410744548, 0.0412373729, 0.0415465049, 0.0419444256, 0.0423570685, 0.0427625179, 0.0431657024, 0.0435653515, 0.0439564586, 0.0443408899, 0.0447221808, 0.0450853296, 0.0454186201, 0.0457030721, 0.0459625721, 0.046166759, 0.0463001914, 0.046372395, 0.0464015193, 0.0463796072, 0.0463097505, 0.0462083034, 0.0460983329, 0.0459727049, 0.0458422303, 0.0457237959, 0.045664113, 0.0456875972, 0.045809608, 0.0460686088, 0.0464730859, 0.0470352769, 0.0477830358, 0.0487107448, 0.0497971363, 0.0510122776, 0.0523972511, 0.0540039353, 0.0558539815, 0.0578619428, 0.0598900728, 0.0618339591, 0.0636599883, 0.0654036626, 0.0671130642, 0.068744041, 0.0701468587, 0.0711061358, 0.0714616552, 0.07120049, 0.0704260468, 0.0693312064, 0.0681292415, 0.0670025125, 0.0660993084, 0.0654973164, 0.0652498007, 0.0653921962, 0.0659105778, 0.0667371377, 0.0678296313, 0.0692491755, 0.0711956844, 0.0739962235, 0.0780268908, 0.0836677179, 0.0910413861, 0.0996208787, 0.107774176, 0.113145865, 0.114113867, 0.111185692, 0.106624305, 0.102706172, 0.100457512, 0.09973941, 0.0999803767, 0.100663662, 0.101484023, 0.102297984, 0.103020392, 0.103604496, 0.104017459, 0.104234956, 0.104257978, 0.104095958, 0.103781603, 0.103343785, 0.102823593, 0.102235794, 0.101562999, 0.100845397, 0.100166798, 0.0995702967, 0.0990480781, 0.0985482335, 0.098019205, 0.0974385738, 0.096832037, 0.0962267146, 0.0956389531, 0.0950484499, 0.094420433, 0.093705155, 0.092861034, 0.0919235125, 0.0909262076, 0.0899665132, 0.0892434493, 0.0876493677, 0.086199142, 0.0851760283, 0.0842428654, 0.0834174305, 0.0827567801, 0.082336694, 0.0822488442, 0.0826352686, 0.0836760029, 0.0854484439, 0.0877815112, 0.0902845189, 0.0926302522, 0.0948465765, 0.0972801298, 0.100316927, 0.104264922, 0.109240964, 0.114992492, 0.120892897, 0.126225039, 0.130717769, 0.134738788, 0.138820559, 0.143159747, 0.147564471, 0.151863128, 0.156159624, 0.160498619, 0.164468691, 0.167312294, 0.168501213, 0.168219686, 0.167243481, 0.166267484, 0.165411323, 0.16433914, 0.162766546, 0.160777226, 0.158605129, 0.156307131, 0.153835043, 0.151355252, 0.149302498, 0.148078382, 0.147733763, 0.147907972, 0.148107991, 0.147998497, 0.147536784, 0.14688006, 0.14622952, 0.145824388, 0.145853251, 0.146281853, 0.146834612, 0.147097975, 0.146750316, 0.145711631, 0.144082665, 0.14204064, 0.139791623, 0.137520775, 0.135377511, 0.133470073, 0.131880999, 0.130662262, 0.129834265, 0.129406035, 0.129340723, 0.129566133, 0.130022913, 0.130700782, 0.131659418, 0.13302128, 0.134914294, 0.137453079, 0.140714109, 0.14472954, 0.149500459, 0.155007064, 0.161179602, 0.167863905, 0.174831375, 0.181781575, 0.188424692, 0.194635987, 0.20049578, 0.206003308, 0.210724071, 0.213958234, 0.215379298, 0.21544981, 0.215162233, 0.215468824, 0.216841087, 0.219195485, 0.222188592, 0.22567445, 0.229956836, 0.235626608, 0.243333414, 0.253657639, 0.266994178, 0.28335011, 0.302334934, 0.324057072, 0.350206703, 0.382841676, 0.420111954, 0.452943325, 0.469127715, 0.463880956, 0.44429639, 0.422015429, 0.404868305, 0.395129383, 0.391797334, 0.392875403, 0.396574914, 0.401605934, 0.407120407, 0.412585378, 0.417681575, 0.422262043, 0.426267266, 0.429690391, 0.432568759, 0.435008764, 0.437125415, 0.438955724, 0.440434873, 0.441466659, 0.442036152, 0.442264467, 0.44236505, 0.442524523, 0.442810297, 0.443134487, 0.443272322, 0.443002105, 0.442224205, 0.440874547, 0.438926786, 0.436505318, 0.433976859, 0.431891292, 0.430542827, 0.429737926, 0.429244995, 0.429275215, 0.430267453, 0.432247579, 0.434671521, 0.436839372, 0.438457221, 0.43976894, 0.441109538, 0.442369372, 0.442949563, 0.442399621, 0.440701962, 0.43795532, 0.434098601, 0.429156214, 0.423450828, 0.417443722, 0.411468446, 0.405623257, 0.399865627, 0.394216448, 0.388718963, 0.383357316, 0.378031284, 0.372679502, 0.367441028, 0.362584263, 0.358286977, 0.354545861, 0.351258427, 0.348309934, 0.345625818, 0.343088806, 0.340544641, 0.337892771, 0.335171998, 0.332639188, 0.330667913, 0.329524845, 0.329414368, 0.331017137, 0.335881412, 0.345082074, 0.357227087, 0.367656887, 0.370711505, 0.364736915, 0.354139149, 0.345223844, 0.341046154, 0.340608686, 0.341885328, 0.34365508, 0.346008211, 0.350494862, 0.357916296, 0.365609586, 0.369378895, 0.368386716, 0.365904659, 0.364752978, 0.364455462, 0.363336354, 0.361311793, 0.35971573, 0.359384388, 0.360047281, 0.361263454, 0.362636179, 0.363140076, 0.361658067, 0.358228087, 0.353992164, 0.350130945, 0.34735024, 0.34564665, 0.344208866, 0.342280924, 0.340172052, 0.338757724, 0.337942868, 0.336550653, 0.333797842, 0.330132693, 0.326653033, 0.324264944, 0.323409081, 0.324076861, 0.325569779, 0.326442182, 0.325221628, 0.321498007, 0.316164851, 0.310556233, 0.305606067, 0.301621675, 0.298477441, 0.295875996, 0.293620408, 0.29172194, 0.290394664, 0.28985399, 0.290089548, 0.290773869, 0.291419327, 0.291725308, 0.291634917, 0.291350663, 0.29116419, 0.291410893, 0.292242497, 0.29355371, 0.29519707, 0.297087997, 0.299188435, 0.301435232, 0.303765714, 0.306196541, 0.30875659, 0.311415344, 0.314196616, 0.317120165, 0.319992572, 0.322458327, 0.324312299, 0.325680047, 0.326837063, 0.328013688, 0.329354972, 0.330813527, 0.332130909, 0.333048552, 0.333525062, 0.333893001, 0.334628403, 0.335903466, 0.337503314, 0.339117736, 0.340587974, 0.341973811, 0.343573809, 0.345776558, 0.348929882, 0.35317117, 0.358416885, 0.364568114, 0.371741861, 0.380414218, 0.391507626, 0.406235158, 0.425459236, 0.447873622, 0.468376577, 0.480790138, 0.483721256, 0.48215726, 0.482488185, 0.487926275, 0.498570561, 0.513496995, 0.531898797, 0.553473473, 0.578550935, 0.606963933, 0.636330068, 0.662777901, 0.684256852, 0.701883674, 0.717732787, 0.732898474, 0.747948408, 0.76329875, 0.777853012, 0.788784385, 0.794124961, 0.794827044, 0.792783618, 0.788154244, 0.780663967, 0.772030473, 0.764999092, 0.759398758, 0.751522183, 0.738879859, 0.723479927, 0.709218025, 0.698104501, 0.689880133, 0.683595538, 0.678745508, 0.675227046, 0.672709882, 0.670242667, 0.666804552, 0.662477314, 0.65865916, 0.657018602, 0.657855332, 0.659592867, 0.659630358, 0.656367302, 0.650096774, 0.641950011, 0.632648945, 0.622604549, 0.612433434, 0.603069961, 0.595573366, 0.591160953, 0.590765953, 0.593993545, 0.598260701, 0.59973824, 0.596373975, 0.589295149, 0.581181705, 0.574026108, 0.568705201, 0.565274656, 0.563399792, 0.562611938, 0.562478065, 0.56293565, 0.56390059, 0.565225005, 0.566918731, 0.569442511, 0.573650002, 0.581308603, 0.594985485, 0.615702868, 0.639728844, 0.659451067, 0.6694206, 0.67113781, 0.669734776, 0.668029904, 0.666981518, 0.669357359, 0.677406609, 0.687414408, 0.691448092, 0.686676443, 0.678161263, 0.671914816, 0.669658244, 0.670193791, 0.672335863, 0.676087737, 0.681872427, 0.689631701, 0.698301911, 0.707573175, 0.717922747, 0.728183627, 0.735196471, 0.736347258, 0.73200345, 0.725501776, 0.720262885, 0.716991782, 0.714305341, 0.711980462, 0.710801244, 0.709001124, 0.702308893, 0.689688206, 0.676235259, 0.668515682, 0.669063985, 0.674985468, 0.680782974, 0.682664037, 0.681051791, 0.678613722, 0.676987886, 0.675595403, 0.673673034, 0.671726704, 0.67095089, 0.672585726, 0.676539361, 0.68200773, 0.689236164, 0.700068653, 0.716075718, 0.736600399, 0.757855177, 0.77366817, 0.780579329, 0.782096744, 0.784315228, 0.78812784, 0.790058553, 0.788658738, 0.786379457, 0.785387278, 0.785320282, 0.785456657, 0.78734374, 0.793390512, 0.803735495, 0.814551592, 0.821777582, 0.825350106, 0.829038799, 0.836387217, 0.847715735, 0.859859526, 0.868713558, 0.872738183, 0.872779071, 0.870369434, 0.867212296, 0.865315199, 0.865502357]

	# this is the 'MCC-17' sample #68 from the FiveRawMaterials data set found in 'Help Files / Tutorials / Quick Startes / SVM classification quick start'
    # class should be 3
    sample = [0.0752074346, 0.0777968168, 0.0792381391, 0.0796711072, 0.0794575214, 0.078819789, 0.0780065879, 0.0770771876, 0.0760835409, 0.0751417056, 0.0742456093, 0.0734117031, 0.0726588145, 0.0718846321, 0.0710475817, 0.0701693296, 0.0692441836, 0.068317093, 0.0674070492, 0.0665106401, 0.0656712428, 0.0649015531, 0.0640960559, 0.0633200034, 0.0625722781, 0.0618027449, 0.0609674864, 0.0601257086, 0.0592947006, 0.0584696531, 0.0576515608, 0.0568589754, 0.0560749359, 0.0552895479, 0.0545072556, 0.0537302084, 0.0529480763, 0.0521538258, 0.0513625145, 0.050584197, 0.0498075895, 0.0490384512, 0.0483016968, 0.0475807972, 0.0468803234, 0.0461990833, 0.0455345325, 0.044878561, 0.0442346744, 0.043607872, 0.0430006199, 0.0424204655, 0.0418461561, 0.0412731767, 0.0407130718, 0.0401566625, 0.0396297164, 0.0391298123, 0.0386230163, 0.0381246805, 0.0376342721, 0.0371686816, 0.0367138796, 0.0362785272, 0.035854239, 0.0354396105, 0.0350385122, 0.0346618704, 0.0342883281, 0.0339188762, 0.0335549712, 0.0332024097, 0.0328547172, 0.0325294919, 0.0322188549, 0.0319083743, 0.031617444, 0.0313412361, 0.0310672913, 0.0307961311, 0.0305317845, 0.0302762985, 0.0300268922, 0.0297778044, 0.0295336638, 0.0293012857, 0.0290786829, 0.0288597345, 0.0286425557, 0.0284280181, 0.0282134209, 0.0279917717, 0.0277591348, 0.0275225434, 0.0272812247, 0.0270442367, 0.0268151555, 0.0265923534, 0.0263753533, 0.0261751208, 0.0259921942, 0.0258139372, 0.025660634, 0.0255290065, 0.0254138708, 0.025318047, 0.0252435412, 0.0251868367, 0.0251439605, 0.0251194444, 0.0251178946, 0.025148889, 0.0252130032, 0.0253039803, 0.0254085269, 0.0255146232, 0.0256149769, 0.0256873574, 0.0257295575, 0.0257491674, 0.0257519484, 0.0257369671, 0.0257016215, 0.0256534815, 0.0256042685, 0.025545856, 0.0254915357, 0.0254551973, 0.0254189372, 0.0253764186, 0.0253486242, 0.0253332462, 0.0253223572, 0.0253281593, 0.0253461208, 0.025369307, 0.0253995266, 0.0254316535, 0.025456449, 0.0254880581, 0.0255036745, 0.0255175028, 0.0255348291, 0.0255309138, 0.0255236235, 0.0255134311, 0.0254907999, 0.0254682098, 0.0254304204, 0.0253741145, 0.0253117885, 0.0252332091, 0.0251468625, 0.025076488, 0.0250353813, 0.0250356197, 0.0250776205, 0.0251715984, 0.0253059473, 0.0254926085, 0.0257256236, 0.0259993281, 0.0263340473, 0.0267360006, 0.0272106323, 0.0277767777, 0.0284370184, 0.0291657243, 0.029926518, 0.03066043, 0.0313050561, 0.0318123698, 0.0321750045, 0.0323961377, 0.0325147919, 0.0325714536, 0.0325991325, 0.0326167345, 0.0326376557, 0.0326667018, 0.0327146649, 0.0327951312, 0.0329251103, 0.033130724, 0.0334354639, 0.0338631868, 0.0344296694, 0.0351215601, 0.0359248109, 0.0367867947, 0.0376213193, 0.03837635, 0.039034307, 0.0396036096, 0.0401155539, 0.0405935645, 0.0410485677, 0.0414751954, 0.0418625288, 0.0421978645, 0.042486351, 0.0427271314, 0.0429071598, 0.0430536456, 0.0431437679, 0.0432014652, 0.0432133861, 0.0431797914, 0.0431153364, 0.043019671, 0.0428934693, 0.0427499413, 0.0425921082, 0.0424177833, 0.0422327518, 0.042042613, 0.0418511815, 0.0416662097, 0.0414862037, 0.0413056798, 0.041108489, 0.0408780389, 0.0406107493, 0.0403159074, 0.0400116257, 0.0397013612, 0.0393826962, 0.039049048, 0.0387069993, 0.0383718424, 0.0381134935, 0.0380066037, 0.0379679799, 0.0380164608, 0.0378009565, 0.0375232995, 0.0372766927, 0.0370496735, 0.0368327163, 0.0366353132, 0.0365146585, 0.0365225226, 0.03669101, 0.0370521769, 0.037647076, 0.0384849943, 0.0395581089, 0.0408708118, 0.0423874334, 0.044032272, 0.0457355492, 0.0474706218, 0.0492017642, 0.050885506, 0.0524851456, 0.0539985113, 0.0554657876, 0.0569809601, 0.0586251915, 0.0604221337, 0.0623406172, 0.064294979, 0.0661880374, 0.0679345652, 0.0694909543, 0.070852831, 0.0720515698, 0.0731409192, 0.0741358176, 0.0750248581, 0.075771071, 0.0763171017, 0.0766276792, 0.0766833872, 0.0764771178, 0.0760387853, 0.0753965229, 0.0745962113, 0.0736979395, 0.0727913454, 0.0719655082, 0.07125552, 0.0706624761, 0.0701701343, 0.0697585493, 0.069410421, 0.0691361576, 0.068939954, 0.068797335, 0.0686368868, 0.0683661848, 0.0679008067, 0.0672116727, 0.0663102567, 0.0652705505, 0.0641781539, 0.0631190538, 0.0621782131, 0.0613938756, 0.060790509, 0.0603680611, 0.060113281, 0.0600205623, 0.0600904822, 0.0603212975, 0.0607202835, 0.0613019392, 0.0620891452, 0.0630883425, 0.0643182397, 0.0657841712, 0.0674605295, 0.0693496913, 0.0714604259, 0.0737939402, 0.0763863623, 0.0792606473, 0.0823834017, 0.0856807381, 0.0890346467, 0.0922502875, 0.095082365, 0.097319819, 0.0989115015, 0.0999746323, 0.100712337, 0.101325952, 0.10199596, 0.102893844, 0.104205795, 0.106131762, 0.108805999, 0.112285934, 0.116576336, 0.121646479, 0.12746273, 0.133959293, 0.140999034, 0.148340657, 0.155638129, 0.162539676, 0.168775439, 0.17424795, 0.178990722, 0.183107927, 0.18671906, 0.189943194, 0.192868337, 0.195581049, 0.198185682, 0.200777546, 0.203446344, 0.206245825, 0.209182426, 0.212247252, 0.215383232, 0.218484879, 0.22142075, 0.224032521, 0.226184919, 0.227799594, 0.228864193, 0.229430333, 0.229563668, 0.229314938, 0.228733182, 0.22785151, 0.226717323, 0.225383729, 0.223905578, 0.222400859, 0.220994458, 0.219806269, 0.218915328, 0.218313083, 0.217938393, 0.217717052, 0.217562065, 0.217390552, 0.217110038, 0.216667414, 0.21603623, 0.215228751, 0.214286119, 0.213288262, 0.212309957, 0.211422414, 0.21064499, 0.209954381, 0.209307, 0.20869489, 0.208130628, 0.20762682, 0.207095444, 0.206356764, 0.205234855, 0.203583553, 0.201362193, 0.198635221, 0.19553481, 0.192189679, 0.188705027, 0.185212865, 0.181786373, 0.178471401, 0.175304964, 0.172328725, 0.16959922, 0.167106003, 0.164787233, 0.162556887, 0.160353631, 0.1581489, 0.155957296, 0.153826475, 0.151810393, 0.149960563, 0.148309141, 0.146855533, 0.145601973, 0.144595519, 0.143824369, 0.143196076, 0.142559499, 0.141843259, 0.141165599, 0.140718594, 0.140647635, 0.140980214, 0.141722068, 0.14296928, 0.144838154, 0.147222877, 0.149625912, 0.151388407, 0.152192906, 0.152267009, 0.15210779, 0.152049348, 0.152189672, 0.152497053, 0.152927548, 0.153446659, 0.154025584, 0.154615641, 0.15519163, 0.155767307, 0.156347692, 0.156943828, 0.157575816, 0.158306435, 0.159188733, 0.16022858, 0.161331534, 0.16240415, 0.16336903, 0.16417025, 0.164772451, 0.165176123, 0.165419802, 0.165527388, 0.165503591, 0.165361404, 0.165134668, 0.164856926, 0.164576247, 0.164346308, 0.164231837, 0.164246753, 0.16435951, 0.164514303, 0.16463694, 0.164664105, 0.164576784, 0.16434139, 0.163889617, 0.163170904, 0.162167057, 0.160956472, 0.159659117, 0.158356577, 0.157105446, 0.155994013, 0.155144781, 0.154632762, 0.15447472, 0.154640958, 0.155094445, 0.155872092, 0.15708667, 0.15891166, 0.161457121, 0.164762065, 0.168925881, 0.174051195, 0.180290058, 0.187776729, 0.196529567, 0.206528798, 0.217634052, 0.22946234, 0.241401672, 0.252783239, 0.263183951, 0.272366971, 0.280163884, 0.286473393, 0.291253477, 0.294508159, 0.296338648, 0.296873957, 0.296278834, 0.294717968, 0.292365789, 0.289390594, 0.285953999, 0.282232851, 0.278360844, 0.274449408, 0.270575076, 0.266766489, 0.263028949, 0.259368539, 0.255798727, 0.252311528, 0.24894692, 0.245752737, 0.242736757, 0.239954829, 0.237426996, 0.235181317, 0.23323606, 0.231643811, 0.230436698, 0.229679763, 0.229435474, 0.22973083, 0.230620965, 0.232165366, 0.234378248, 0.237256855, 0.240839303, 0.245101854, 0.250033587, 0.255625725, 0.261852235, 0.268642992, 0.275930405, 0.28357482, 0.291361958, 0.299093902, 0.30656904, 0.313719511, 0.320625573, 0.327396154, 0.334097385, 0.340699613, 0.347023249, 0.352791995, 0.357829034, 0.362120569, 0.365771949, 0.368932098, 0.371763557, 0.374378175, 0.376752794, 0.378778249, 0.380216956, 0.38082242, 0.380501479, 0.379297018, 0.377385676, 0.374944568, 0.372078657, 0.36885184, 0.365266621, 0.361387432, 0.357364416, 0.353425622, 0.349727273, 0.34623754, 0.342803895, 0.339289337, 0.335622668, 0.331877708, 0.328171611, 0.324593544, 0.321205527, 0.317986548, 0.314835608, 0.311669737, 0.30849278, 0.305304497, 0.302135348, 0.299027145, 0.296013415, 0.293188184, 0.29055512, 0.288098514, 0.285860389, 0.28385967, 0.282159984, 0.280866683, 0.27997908, 0.279463172, 0.279314756, 0.279579937, 0.280203909, 0.281156778, 0.282418281, 0.284004927, 0.286061913, 0.288675606, 0.292012602, 0.296244323, 0.301400244, 0.307539761, 0.314627469, 0.322623461, 0.331463218, 0.340966076, 0.350703001, 0.35979408, 0.367002428, 0.371164441, 0.37167114, 0.368962497, 0.364419222, 0.359570086, 0.355498999, 0.353016883, 0.352487773, 0.353763103, 0.356307387, 0.359667689, 0.363715976, 0.36847344, 0.373775601, 0.379320025, 0.384803116, 0.39013949, 0.395325184, 0.400226653, 0.404658675, 0.40834251, 0.410891712, 0.412158489, 0.412296236, 0.411748797, 0.410924703, 0.410156161, 0.409590572, 0.408921719, 0.407751113, 0.406160355, 0.404596657, 0.403435707, 0.402263522, 0.400482446, 0.398020864, 0.395401537, 0.393302709, 0.39212206, 0.391718149, 0.391406059, 0.390558749, 0.389306396, 0.388247848, 0.38818267, 0.389449865, 0.391654789, 0.394115567, 0.396475345, 0.398856908, 0.401665509, 0.40539822, 0.410066336, 0.41561079, 0.421922952, 0.428962439, 0.436573207, 0.444545597, 0.452643991, 0.460779279, 0.468983442, 0.47737667, 0.486244053, 0.495740473, 0.505868196, 0.516398132, 0.526680589, 0.536258638, 0.544489801, 0.551050723, 0.555870414, 0.558892608, 0.560085535, 0.559535623, 0.557414114, 0.554121315]
	
    tm = camo.TMatrix()
    tm.NumColumns = len(sample)
    tm.NumRows = 1
    tm.NumPlanes = 1

    # Prepare the sample to be classified (convert the Python array to a TMatrix struct)
	
    data = []
    tm.aData = (ctypes.c_float * (tm.NumColumns * 1 * 1))(*data)
    for x in range(0, tm.NumColumns):
        tm.aData[x] = sample[x]
		
    # Call the Unscrambler Engine to classify the sample	
	
    camo_rc = engine.olcClassify(classifier, ctypes.byref(tm))
    if camo_rc != 0:
        print("Error doing classify: ", camo.rc_to_string(camo_rc))
        return
	
    # Get the result of the classification
	
    members = camo.TMatrix()
    camo_rc = engine.olcGetResultMatrix(classifier, ctypes.c_int(107), ctypes.byref(members))	# 107 = MEMBERS (see camoengine.h)
    if camo_rc != 0:
        print("Error getting result matrix: ", camo.rc_to_string(camo_rc))
        return
		
    print(members.to_string())	# print out the MEMBERS result matrix which shows the class membership

#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
do_classify()

#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
